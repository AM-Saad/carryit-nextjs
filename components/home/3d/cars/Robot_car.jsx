/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 robot_car.glb 
*/

import React from "react";
import { useGLTF } from "@react-three/drei";
import * as THREE from "three";
import { useSpring, a } from "@react-spring/three";

export function RobotCar(props) {
  const { nodes, materials } = useGLTF("/3d/robot_car.glb");


  const animation = useSpring({
    position: props.position,
    from: { position: props.to, rotation: props.toRotation},
    loop: { reverse: true },
    config: { duration: props.duration },
    rotation: props.rotation,
  });

  const newMaterial = new THREE.MeshStandardMaterial({
    ...materials["Material.001"],
    color: props.color,
  });

  return (
    <a.group {...props} dispose={null} receiveShadow castShadow name={props.name}
      position={animation.position}
      rotation={animation.rotation}
      
    >
      {materials && (
        <group
          position={[-0.295, 0.378, 0.162]}
          rotation={[2.673, -0.085, 1.423]}
          scale={[0.015, 0.012, 0.015]}
          name={props.name}

        >
          <mesh
            geometry={nodes.Cylinder005.geometry}
            material={materials["Material.001"]}
          />
          <mesh
            geometry={nodes.Cylinder005_1.geometry}
            material={newMaterial}
          />
          <mesh
            geometry={nodes.Cylinder005_2.geometry}
            material={materials["Material.003"]}
          />
          <mesh
            geometry={nodes.Cylinder005_3.geometry}
            material={materials["Material.006"]}
          />
          <mesh
            geometry={nodes.Cylinder005_4.geometry}
            material={materials["Material.004"]}
          />
        </group>
      )}
    </a.group>
  );
}

useGLTF.preload("/3d/robot_car.glb");
